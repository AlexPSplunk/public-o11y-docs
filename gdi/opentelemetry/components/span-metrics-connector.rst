.. _span-metrics-connector:

***********************************
Metrics transform processor
***********************************

.. meta::
      :description: Renames metrics, and adds, renames, or deletes label keys and values.

The Splunk Distribution of the OpenTelemetry Collector uses the Span Metrics connector to perform the following tasks:



Get started
======================

Follow these steps to configure and activate the component:

1. Deploy the Splunk Distribution of the OpenTelemetry Collector to your host or container platform:

  - :ref:`otel-install-linux`
  - :ref:`otel-install-windows`
  - :ref:`otel-install-k8s`

2. Configure the ``metricstransform`` processor as described in the next section.
3. Restart the Collector.

Sample configuration
--------------------------------------------

To activate the resource processor, add ``metricstransform`` to the ``processors`` section of your configuration file. 

For example:

.. code-block:: yaml

  processors:
    metrics_transform:

To complete the configuration, include the processor in the ``metrics`` pipeline of the ``service`` section of your configuration file. For example:

.. code-block:: yaml

  service:
    pipelines:
      metrics:
        processors: [metricstransform]

.. _metrics-transform-processor-config-example:

Configuration example
----------------------------------



.. _metrics-transform-processor-operations:

Available operations
====================================

The processor can perform the following operations:

* Rename metrics.	For example, rename ``system.cpu.usage``to ``system.cpu.usage_time``.
* Add labels. For example, you can add the new label ``identifier`` with value ``1`` to all points.
* Rename label keys. For example, rename the label ``state`` to ``cpu_state``.
* Rename label values. For example,	in the label ``state``, you can rename the value ``idle`` to ``-``.
* Delete data points. For example, delete all points where the label ``state`` has value ``idle``.
* Toggle data type. For example, you can change ``int`` data points to ``double`` data points
* Scale value. For example, multiply values by 1000 to convert from seconds to milliseconds.
* Aggregate across label sets. For example, you can retain only the label ``state``, and average all points with the same value for this label.
* Aggregate across label values. For example, for the label ``state``, you can sum points where the value is ``user`` or ``system`` into ``used = user + system``.

The following applies:

* You can only apply operations to one or more metrics using a ``strict`` or ``regexp`` filter.

* With the ``action`` property you can:

  * Update your metrics in-place (``update``).

  * Copy and update the copied metrics (``insert``).

  * Combine your metrics into a newly inserted metric that is generated by combining all data points from the set of matching metrics into a single metric (``combine``). The original matching metrics are also removed.

* When renaming metrics, capturing groups from the ``regexp`` filter will be expanded.

* When adding or updating a label value, ``{{version}}`` will be replaced with your Collector's instance version number.

.. _metrics-transform-example-create-new-metric:

Example: Create a new metric from an existing metric
--------------------------------------------------------------------

To create a new metric from an existing metric, apply this configuration:

.. code-block:: yaml

  # create host.cpu.utilization from host.cpu.usage
  include: host.cpu.usage
  action: insert
  new_name: host.cpu.utilization
  operations:
    ...


.. _span-metrics-connector-settings:

Settings
======================

The following table shows the configuration options for the ``metricstransform`` processor:

.. raw:: html

  <div class="metrics-standard" category="included" url="https://raw.githubusercontent.com/splunk/collector-config-tools/main/cfg-metadata/processor/metricstransform.yaml"></div>

Troubleshooting
======================

.. include:: /_includes/troubleshooting-components.rst


